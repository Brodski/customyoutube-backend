
EASY RUN

mvn spring-boot:run


----------------------------
#builds in /target
mvn package
mvn spring-boot:run
java -jar target/myproject-0.0.1-SNAPSHOT.jar
mvn .\myfristspringboot\:run         // ???????

###go to last commit
git reset --hard HEAD

 -----------------------------------------

 show dbs
 show collections
 db.coolDudes.find().pretty()

 //Create db then Collections
 use coolDudes
 db.createCollection('coolDudes');

 db.coolDudes.find( {category: 'News' } ) //SQL where
 db.coolDudes.find().count() // returns 4
 db.coolDudes.find().limit(2)

 db.coolDudes.find().forEach( function(x) {
		print('His name is : ' + x.first_name);
		print('His goal is : ' + x.role);
	})
	His name is : joe
	His goal is : undefined
	His name is : mad
	His goal is : fight for survival

 db.coolDudes.find( { age:{$lt:40} } );

 //consider this:
 {
	id: 12341231231,
	"first_name": "joe",
	"last_name": "swanson",
	"address": {
		"street": "123 Spooner St",
		"City": "Quohog",
		"State": "Rhode Island"
	}
 }
 db.coolDudes.find( {"address.city":"Quohog"} ); //Will return Peter, Quagmire, Joe

 //Insert
 db.coolDudes.insert({first_name:"mad", last_name:"max", role:"fight for survival"});
 db.coolDudes.insertMany([  {...}, {...}, {...} ])

 //Update
 db.coolDudes.update({id:"John123"}, {$set: {first_name:"Bad Sam"} })
 db.coolDudes.update({id:"John123"}, {$set: {myNewfield: "everything before was included!" } })
 db.coolDudes.update({id:"John123"}, {$set: {$inc: {age:5} })     // inc by age + 5
 db.coolDudes.update(		//// update ( <where>, <new value>, <upset param>)
		{first_name:"Jackie"},
		{first_name:"Jackie", last_name:"Chan", role:"live in peace with girlfriend"},
		{upsert: true} );
 db.coolDudes.update{}


 //Remove
 db.coolDudes.remove({first_name:"ash"})

 //Rename
 //$elemMatch
 //$or


 > db.coolDudes.find().pretty()
{
        "_id" : ObjectId("5dbcc3d51769d760df6960f7"),
        "first_name" : "terminator",
        "last_name" : "2"
}
{
        "_id" : ObjectId("5dbcc3e81769d760df6960f8"),
        "first_name" : "arthas",
        "last_name" : "lich king"
}
{
        "_id" : ObjectId("5dbcc43c1769d760df6960f9"),
        "first_name" : "mad",
        "last_name" : "max",
        "role" : "fight for survival"
}
{
        "_id" : ObjectId("5dbcc7c51769d760df6960fa"),
        "first_name" : "mad",
        "last_name" : "max",
        "role" : "fight for survival"
}
{
        "_id" : ObjectId("5dbcc7de1769d760df6960fb"),
        "first_name" : "Ash",
        "last_name" : "BOOMSTICK",
        "role" : "go back where he came from"
}
{
        "_id" : ObjectId("5dbcc83aed635bc81b95f894"),
        "first_name" : "Jackie",
        "last_name" : "Chan",
        "role" : "live in peace with girlfriend"
}

-----------------

Google dive
	-sync files
VS Code

remote desktop tool
	- team viewer
	- chrome remote desktop
	- vnc

mecurial - like git

grep
rsync -data backup
scp
wget -fetch websites
cron - automated tasks
imagemagic - image processing

BIG 3 FRAMEWORKS
React
Angular
Vue

-react most popular

